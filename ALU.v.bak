module ALU(a, b, sel, ALU_result, z_flag);
//PARAMETER
	parameter WIDTH 32
//PORT
	input [WIDTH-1:0] a, b;
	input [2:0] sel;
	output [WIDTH-1:0] ALU_result;
	output z_flag;
//VARIABLE
	reg [31:0] z;
	reg ov;

//LOGIC
	always @(*) begin
		case(sel)
		// Complement A
			3'b000: begin
			z <= ~a;
			end
		// AND
			3'b001: begin
			z <= a&b;
			end
		// EX-OR
			3'b010: begin
			z <= a^b;
			end
		// OR
			3'b011: begin
			end
		// Decrement A
			3'b100: begin
			end
		// Add
			3'b101: begin
			end
		// Subtract
			3'b110: begin
			end
		// Increment A
			3'b111: begin
			end
		endcase
	end
	
endmodule
